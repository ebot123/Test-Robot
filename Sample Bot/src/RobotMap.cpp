// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveBaseSubFront_left_Talon;
std::shared_ptr<SpeedController> RobotMap::driveBaseSubFront_Right_Talon;
std::shared_ptr<SpeedController> RobotMap::driveBaseSubBack_Left_Talon;
std::shared_ptr<SpeedController> RobotMap::driveBaseSubBack_Right_Talon;
std::shared_ptr<RobotDrive> RobotMap::driveBaseSubRobotDrive;
std::shared_ptr<SpeedController> RobotMap::shooter_SubsytemShooter_Talon;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveBaseSubFront_left_Talon.reset(new Talon(1));
    lw->AddActuator("DriveBaseSub", "Front_left_Talon", std::static_pointer_cast<Talon>(driveBaseSubFront_left_Talon));
    
    driveBaseSubFront_Right_Talon.reset(new Talon(2));
    lw->AddActuator("DriveBaseSub", "Front_Right_Talon", std::static_pointer_cast<Talon>(driveBaseSubFront_Right_Talon));
    
    driveBaseSubBack_Left_Talon.reset(new Talon(3));
    lw->AddActuator("DriveBaseSub", "Back_Left_Talon", std::static_pointer_cast<Talon>(driveBaseSubBack_Left_Talon));
    
    driveBaseSubBack_Right_Talon.reset(new Talon(4));
    lw->AddActuator("DriveBaseSub", "Back_Right_Talon", std::static_pointer_cast<Talon>(driveBaseSubBack_Right_Talon));
    
    driveBaseSubRobotDrive.reset(new RobotDrive(driveBaseSubFront_left_Talon, driveBaseSubBack_Left_Talon,
              driveBaseSubFront_Right_Talon, driveBaseSubBack_Right_Talon));
    
    driveBaseSubRobotDrive->SetSafetyEnabled(false);
        driveBaseSubRobotDrive->SetExpiration(0.1);
        driveBaseSubRobotDrive->SetSensitivity(0.5);
        driveBaseSubRobotDrive->SetMaxOutput(1.0);

    shooter_SubsytemShooter_Talon.reset(new Talon(5));
    lw->AddActuator("Shooter_Subsytem", "Shooter_Talon", std::static_pointer_cast<Talon>(shooter_SubsytemShooter_Talon));
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
